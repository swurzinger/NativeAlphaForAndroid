apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.mikepenz.aboutlibraries.plugin'

//https://gist.github.com/shakalaca/6422811
android {
    applicationVariants.all { variant ->
        variant.assembleProvider.get().doLast {
            delete fileTree('src/main/java/com/cylonid/nativealpha') {
                include '**/__WebViewActivity_*.java'
            }
            delete fileTree('src/main') {
                include '**/AndroidManifest.xml'
            }
            ant.move(file: 'src/main/AndroidManifest_original.xml', tofile:'src/main/AndroidManifest.xml')

        }
    }

    compileSdkVersion 33
    buildToolsVersion "32.1.0-rc1"
    splits {
        abi {
            enable true
            reset()
            include "armeabi-v7a", "arm64-v8a"
            universalApk true
        }
    }
    flavorDimensions "default"
    productFlavors {
        extended {
            dimension "default"
            applicationIdSuffix ".pro"
            resValue "string", "app_name_unicode", "Native α+"
        }
        standard {
            dimension "default"
            isDefault true
            resValue "string", "app_name_unicode", "Native α"
        }
    }

    defaultConfig {
        applicationId "com.cylonid.nativealpha"
        minSdkVersion 26
        targetSdkVersion 33
        versionCode 1311
        versionName "1.3.1"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArguments clearPackageData: 'true'
    }
    buildFeatures {
        dataBinding true
        viewBinding true
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
          applicationIdSuffix = ".debug"
          resValue "string", "app_name_unicode", "_DEBUG-Nα"
        }
        applicationVariants.all {
                // this method is use to rename your release apk only
            variant ->
                variant.outputs.each {
                        // on below line we are setting a name to our apk
                    output ->
                        // on below line we are specifying our app name.
                        project.ext { appName = 'NativeAlpha' }
                        // on below line we are adding the formatted date to our apk file name.
                        def formattedDate = new Date().format('yyyy-MM-dd-HH-mm-ss')
                        // on below line we are creating a new name for our apk.
                        def newName = output.outputFile.name
                        // on below line we are replacing our previous name with our app name.
                        newName = newName.replace("app-", "$project.ext.appName-")
                        // on below line we are replacing -release with our formatted date.
                        newName = newName.replace("-release", "-release-" + "v" + variant.versionName)
                        // at last we are setting our apk name to it.
                        output.outputFileName = newName

                }
        }
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    namespace 'com.cylonid.nativealpha'

}
repositories {
    maven {
        url 'https://gitlab.com/api/v4/projects/8817162/packages/maven'
    }
    mavenCentral()
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.mikhaellopez:circularprogressbar:3.1.0'
    implementation 'org.jsoup:jsoup:1.14.1'
    //    https://gitlab.com/eyeo/distpartners/libadblockplus-android/-/tags
    implementation 'org.adblockplus:adblock-android-webview:5.0.1'
    implementation 'com.github.ihimanshurawat:Hasher:1.2'
    implementation 'androidx.navigation:navigation-fragment:2.5.3'
    implementation 'androidx.navigation:navigation-ui:2.5.3'
    implementation 'com.google.code.gson:gson:2.8.9'
    implementation 'io.github.medyo:android-about-page:2.0.0'
    implementation 'androidx.webkit:webkit:1.6.1'
    implementation 'com.jakewharton:process-phoenix:2.1.2'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.robolectric:robolectric:4.3.1'
    testImplementation 'org.json:json:20210307'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.5.1'
    androidTestImplementation 'androidx.test.espresso:espresso-web:3.5.1'
    androidTestImplementation 'androidx.test:rules:1.5.0'
    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestUtil 'androidx.test:orchestrator:1.4.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    implementation "com.mikepenz:aboutlibraries:10.0.0"
    implementation "com.mikepenz:aboutlibraries-core:10.0.0"
    implementation 'pub.devrel:easypermissions:3.0.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    implementation "androidx.biometric:biometric:1.1.0"

    kapt "com.android.databinding:compiler:3.1.4"


}

int NUM_OF_CONTAINERS = 8
String placeholder = "<!--Placeholder-->"

0.upto(NUM_OF_CONTAINERS-1) { int i ->
    def trTask = tasks.register( "createWebViewclass${i}", Copy ) {
        from 'src/main/java/com/cylonid/nativealpha/WebViewActivity.java'
        into 'src/main/java/com/cylonid/nativealpha'
        filter {
            String line -> line.replaceAll("WebViewActivity", "__WebViewActivity_${i}")
        }
        rename { String fileName ->
            fileName.replace("WebViewActivity.java", "__WebViewActivity_${i}.java")
        }
    }
    // TODO: these task actually don't depend on each other, check why gradle thinks they do
    if (i > 0) trTask.get().dependsOn tasks.named("createWebViewclass${i-1}").get()
    preBuild.dependsOn trTask
}

def renameManifest = tasks.register("renameManifest") {
    if (!file('src/main/AndroidManifest_original.xml').exists()) {
        ant.move(file: 'src/main/AndroidManifest.xml', tofile: 'src/main/AndroidManifest_original.xml')
    }
}
preBuild.dependsOn renameManifest


def generateWebViewActivities = tasks.register( "extendAndroidManifest", Copy ) {
    from 'src/main/AndroidManifest_original.xml'
    into 'src/main'

    String replacement = ""
    for (int i = 0; i < NUM_OF_CONTAINERS; i++) {
        replacement += "        <activity\n" +
                "            android:name=\".__WebViewActivity_" + String.valueOf(i) + "\"\n" +
                "            android:label=\"@string/app_name_unicode\"\n" +
                "            android:parentActivityName=\".MainActivity\"\n" +
                "            android:icon=\"@mipmap/native_alpha\"\n" +
                "            android:roundIcon=\"@mipmap/native_alpha\"\n" +
                "            android:theme=\"@style/AppTheme.NoActionBar.Webapp\"\n" +
                "            android:configChanges=\"orientation|screenSize|smallestScreenSize|density|screenLayout|uiMode|keyboard|keyboardHidden|navigation\"\n" +
                "            android:launchMode=\"standard\"\n" +
                "            android:process=\":web_sandbox_" + String.valueOf(i) + "\"\n" +
                "            android:documentLaunchMode=\"intoExisting\"\n" +
                "         />\n"
    }


    filter {
        String line -> line.replaceAll(placeholder, replacement)
    }
    rename { String fileName ->
        fileName.replace("_original", "")
    }
}
preBuild.dependsOn generateWebViewActivities
tasks.named("extendAndroidManifest").get().dependsOn renameManifest

0.upto(NUM_OF_CONTAINERS-1) { int i -> tasks.named("extendAndroidManifest").get().dependsOn tasks.named("createWebViewclass${i}").get() }
